From d8ea655d9ba0c8989c8292ffd92f425b6dcdc736 Mon Sep 17 00:00:00 2001
From: Srushti Mogaveera <srushtimogaveera2002@gmail.com>
Date: Fri, 28 Jul 2023 20:28:30 +0530
Subject: [PATCH] Create Patch File

---
 client3.py     | 10 +++++++---
 client_test.py |  3 ++-
 2 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/client3.py b/client3.py
index f1771c3..a3886cb 100644
--- a/client3.py
+++ b/client3.py
@@ -35,12 +35,14 @@ def getDataPoint(quote):
 	stock = quote['stock']
 	bid_price = float(quote['top_bid']['price'])
 	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
+	price = (bid_price+ask_price)/2
 	return stock, bid_price, ask_price, price
 
 def getRatio(price_a, price_b):
 	""" Get ratio of price_a and price_b """
 	""" ------------- Update this function ------------- """
+	if(price_b ==0):
+		return
 	""" Also create some unit tests for this function in client_test.py """
 	return 1
 
@@ -48,12 +50,14 @@ def getRatio(price_a, price_b):
 if __name__ == "__main__":
 
 	# Query the price once every N seconds.
-	for _ in iter(range(N)):
+	for _ in range(N):
 		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
 		""" ----------- Update to get the ratio --------------- """
+		prices={}
 		for quote in quotes:
 			stock, bid_price, ask_price, price = getDataPoint(quote)
+			prices[stock]=price
 			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-		print ("Ratio %s" % getRatio(price, price))
+		print ("Ratio %s" % (getRatio(prices['ABC'],prices['DEF'])))
diff --git a/client_test.py b/client_test.py
index af2bf26..4edd1e7 100644
--- a/client_test.py
+++ b/client_test.py
@@ -8,7 +8,8 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
-
+    for quote in quotes:
+        self =.assertEqual(getDataPoint(quote), (quote['stock'],quote['top_bid']['price'],quote['top_ask']['price'],(quote['top_bid']['price']+quote['top_ask']['price'])/2))
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
       {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
-- 
2.41.0.windows.3

